name: Code Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-quality:
    name: Backend Code Quality
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: pharmacy_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Check Prettier formatting
      run: npm run format:check
    
    - name: Run tests with coverage
      run: npm run test:coverage
      env:
        NODE_ENV: test
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_DB: pharmacy_test
        POSTGRES_USER: testuser
        POSTGRES_PASSWORD: testpassword
        JWT_SECRET: test-secret-key-for-testing-only
        CAPCOM6_API_URL: http://localhost:8080
        CAPCOM6_USERNAME: test
        CAPCOM6_PASSWORD: test
        CAPCOM6_PHONE_NUMBER: +1234567890
    
    - name: Upload backend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        flags: backend
        name: backend-coverage

  frontend-quality:
    name: Frontend Code Quality
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Check Prettier formatting
      run: npm run format:check
    
    - name: Run TypeScript type check
      run: npm run type-check
    
    - name: Run tests with coverage
      run: npm run test:coverage
    
    - name: Build production bundle
      run: npm run build
    
    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Backend security audit
      working-directory: ./backend
      run: |
        npm ci
        npm audit --audit-level moderate
    
    - name: Frontend security audit
      working-directory: ./frontend
      run: |
        npm ci
        npm audit --audit-level moderate
    
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
    
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [backend-quality, frontend-quality, security-scan]
    
    steps:
    - name: Quality Gate Passed
      run: |
        echo "ðŸŽ‰ All quality checks passed successfully!"
        echo "âœ… Backend linting and formatting"
        echo "âœ… Backend tests with coverage"
        echo "âœ… Frontend linting and formatting"
        echo "âœ… Frontend type checking"
        echo "âœ… Frontend tests with coverage"
        echo "âœ… Frontend production build"
        echo "âœ… Security audits"
        echo "âœ… CodeQL analysis"